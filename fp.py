import numpy as np

##################################### FP parameters ##########################################
def LFT_FP(confLFT):
    if confLFT == 0:
        freqLFT = np.array([[40., 60., 78.],[50., 68., 89.],[68., 89., 119.],[78., 100., 140.]])
        bandLFT = np.array([[0.3, 0.23, 0.23],[0.3, 0.23, 0.23],[0.23, 0.23, 0.3],[0.23, 0.23, 0.3]])

       # dpixLFT = np.array([[32., 32., 32.],[32., 32., 32.],[32., 32., 32.],[32., 32., 32.]])
       # npixLFT = np.array([[18., 18., 18.],[18., 18., 18.],[18., 18., 18.],[18., 18., 18.]])

       # dpixLFT = np.array([[24., 24., 24.],[24., 24., 24.],[24., 24., 24.],[24., 24., 24.]])
       # npixLFT = np.array([[32., 32., 32.],[32., 32., 32.],[32., 32., 32.],[32., 32., 32.]])

       # dpixLFT = np.array([[19., 19., 19.],[19., 19., 19.],[19., 19., 19.],[19., 19., 19.]])
       # npixLFT = np.array([[50., 50., 50.],[50., 50., 50.],[50., 50., 50.],[50., 50., 50.]])

       # dpixLFT = np.array([[16., 16., 16.],[16., 16., 16.],[16., 16., 16.],[16., 16., 16.]])
       # npixLFT = np.array([[72., 72., 72.],[72., 72., 72.],[72., 72., 72.],[72., 72., 72.]])
       
        dpixLFT = np.array([[24., 24., 24.],[24., 24., 24.],[16., 16., 16.],[16., 16., 16.]]) #baseline
        npixLFT = np.array([[32., 32., 32.],[32., 32., 32.],[72., 72., 72.],[72., 72., 72.]])#baseline
        NEPreadLFT = np.array([[3.27, 3.12, 3.08],[3.46, 3.02, 3.04],[3.02, 3.04, 4.09],[3.08, 3.67, 4.06]]);
    return freqLFT, bandLFT, dpixLFT, npixLFT, NEPreadLFT

def HFT_FP(confHFT):
    if confHFT == 0: # F3.5 small FP
        freqHFT = np.array([[100., 140., 195.],[119., 166., 235.],[280., 337., 402.]])
        bandHFT = np.array([[0.23, 0.3, 0.3],[0.3, 0.3, 0.3],[0.3, 0.3, 0.23]])
        dpixHFT = np.array([[12., 12., 12.],[12., 12., 12.],[6., 6., 6.]])
        npixHFT = np.array([[108.,108.,108.],[108.,108.,108.],[161.,161.,161.]]);
        NEPreadHFT =([[3.67, 4.06, 3.98],[4.09, 3.94, 4.03],[4.15, 4.32, 3.63]]);
    if confHFT == 1: # F2.2 split optionA
        freqHFT = np.array([[100., 140., 195.],[119., 166., 235.],[280., 337., 402.]])
        bandHFT = np.array([[0.23, 0.3, 0.3],[0.3, 0.3, 0.3],[0.3, 0.3, 0.23]])
        dpixHFT = np.array([[12., 12., 12.],[17., 17., 17.],[5., 5., 5.]])
        npixHFT = np.array([[111.,111.,111.],[76.,76.,76.],[169.,169.,169.]]);
        NEPreadHFT =([[3.67, 4.06, 3.98],[4.09, 3.94, 4.03],[4.15, 4.32, 3.63]]);

    if confHFT == 2: # F3.0 split optionA
        freqHFT = np.array([[100., 140., 195.],[119., 166., 235.],[280., 337., 402.]])
       # freqHFT = np.array([[100., 140., 195.],[119., 166., 235.],[195., 235., 402.]])
        bandHFT = np.array([[0.23, 0.3, 0.3],[0.3, 0.3, 0.3],[0.3, 0.3, 0.23]])

       # dpixHFT = np.array([[12., 12., 12.],[12., 12., 12.],[9.6, 9.6, 9.6]])
       # npixHFT = np.array([[183.,183.,183.],[244.,244.,244.],[61.,61.,61.]]);

       # dpixHFT = np.array([[12., 12., 12.],[12., 12., 12.],[7.8, 7.8, 7.8]])
       # npixHFT = np.array([[183.,183.,183.],[244.,244.,244.],[91.,91.,91.]]);

       # dpixHFT = np.array([[20.4, 20.4, 20.4],[20.4, 20.4, 20.4],[6.6, 6.6, 6.6]])
       # npixHFT = np.array([[57.,57.,57.],[76.,76.,76.],[127.,127.,127]]);
        
        dpixHFT = np.array([[15.7, 15.7, 15.7],[15.7, 15.7, 15.7],[5.7, 5.7, 5.7]]) #CDR baseline
        npixHFT = np.array([[111.,111.,111.],[148.,148.,148.],[169.,169.,169.]]); #CDR baseline
        
       # dpixHFT = np.array([[15.7, 15.7, 15.7],[15.7, 15.7, 15.7],[4.9, 4.9, 4.9]])
       # npixHFT = np.array([[111.,111.,111.],[148.,148.,148.],[217.,217.,217.]]);

       # dpixHFT = np.array([[15.7, 15.7, 15.7],[15.7, 15.7, 15.7],[6.6, 6.6, 5.7]]) # dual band baseline
       # npixHFT = np.array([[111.,111.,111.],[148.,148.,148.],[127.,127.,169]]); # dual band baseline
       
       
        NEPreadHFT =([[3.67, 4.06, 3.98],[4.09, 3.94, 4.03],[4.15, 4.32, 3.63]]);
   
    return freqHFT, bandHFT, dpixHFT, npixHFT, NEPreadHFT
